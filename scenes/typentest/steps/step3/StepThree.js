import TypenHeader from "../../header/Header";
import { useState } from "react";

const StepThree = ({
  typentestPageData,
  typentestStepThreeData,
  occasions,
  setOccasions,
}) => {
  const headTop = {
    top: typentestPageData?.step_header_text,
    bottom: typentestPageData?.step_header_paragraph,
  };
  const headBot = typentestStepThreeData?.header;
  const [multipleData, setMultipleData] = useState([
    {
      id: 1,
      img:
        typentestStepThreeData?.image_one?.length > 0
          ? typentestStepThreeData?.image_one[0]?.url
          : "/typenteststep2.png",
      text: typentestStepThreeData?.text_one,
      selected: false,
    },
    {
      id: 2,
      img:
        typentestStepThreeData?.image_two?.length > 0
          ? typentestStepThreeData?.image_two[0]?.url
          : "/typenteststep2.png",
      text: typentestStepThreeData?.text_two,
      selected: false,
    },
    {
      id: 3,
      img:
        typentestStepThreeData?.image_three?.length > 0
          ? typentestStepThreeData?.image_three[0]?.url
          : "/typenteststep2.png",
      text: typentestStepThreeData?.text_three,
      selected: false,
    },
    {
      id: 4,
      img:
        typentestStepThreeData?.image_four?.length > 0
          ? typentestStepThreeData?.image_four[0]?.url
          : "/typenteststep2.png",
      text: typentestStepThreeData?.text_four,
      selected: false,
    },
  ]);
  multipleData?.map((data) => {
    const selected = occasions?.find((occasion) => occasion.id === data.id);
    if (selected !== undefined) {
      data.selected = true;
    }
  });
  const handleSelected = (el, event) => {
    if (!event.target.checked) {
      el.selected = event.target.checked;
      setMultipleData([...multipleData]);
      let a = occasions.filter((i) => i.id !== el.id);
      setOccasions([...a]);
      return;
    }
    if (occasions.length >= 1) {
      return;
    } else {
      el.selected = event.target.checked;
      setMultipleData([...multipleData]);
      setOccasions([...occasions, el]);
    }
  };

  return (
    <div className={"typentest__step__three"}>
      <TypenHeader headTop={headTop} headBot={headBot} />
      <div className={"typentest__step__three__multiple"}>
        {multipleData.map((e, i) => {
          return (
            <label className={"typentest__step__three__multiple__item"} key={i}>
              <div
                className={"typentest__step__three__multiple__item__elements"}
              >
                <div
                  style={
                    e.selected
                      ? {
                          border: "2px solid #007efc",
                          WebkitBoxShadow: " 0px 5px 15px -1px rgba(0,0,0,.5)",
                          boxShadow: "0px 5px 15px -1px rgba(0,0,0,.5)",
                          position: "relative",
                        }
                      : null
                  }
                >
                  <svg
                    version="1.1"
                    id="Layer_1"
                    xmlns="http://www.w3.org/2000/svg"
                    className={
                      "typentest__step__three__multiple__item__elements__checkIcon"
                    }
                    xlink="http://www.w3.org/1999/xlink"
                    x="0px"
                    y="0px"
                    viewBox="0 0 512 512"
                    style={
                      e.selected
                        ? {
                            enableBackground: "new 0 0 512 512",
                            width: " 23rem",
                            transform: "translate(-50%, -50%)",
                            position: "absolute",
                            top: "50%",
                            left: "50%",
                            zIndex: "1",
                            display: "block",
                          }
                        : { display: "none" }
                    }
                    space="preserve"
                  >
                    <g>
                      <g>
                        <path
                          d="M504.502,75.496c-9.997-9.998-26.205-9.998-36.204,0L161.594,382.203L43.702,264.311c-9.997-9.998-26.205-9.997-36.204,0
                                                            c-9.998,9.997-9.998,26.205,0,36.203l135.994,135.992c9.994,9.997,26.214,9.99,36.204,0L504.502,111.7
                                                            C514.5,101.703,514.499,85.494,504.502,75.496z"
                        />
                      </g>
                    </g>
                  </svg>

                  <img
                    src={e.img}
                    alt={e.img}
                    style={e.selected ? { opacity: ".5" } : null}
                  />
                </div>
                <p>{e.text}</p>
              </div>
              <input
                type="checkbox"
                onChange={(elem) => {
                  handleSelected(e, elem);
                }}
              />
            </label>
          );
        })}
      </div>
    </div>
  );
};

export default StepThree;
